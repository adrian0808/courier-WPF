// <auto-generated />
using CourierApplication.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourierApplication.Migrations
{
    [DbContext(typeof(CourierDbContext))]
    [Migration("20200405173248_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourierApplication.Model.Adress", b =>
                {
                    b.Property<int>("AdressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdressId");

                    b.ToTable("Adresses");

                    b.HasData(
                        new
                        {
                            AdressId = 1,
                            Latitude = 51.117193m,
                            Longitude = 17.044819m,
                            Name = "Sienkiewicza 13/4"
                        },
                        new
                        {
                            AdressId = 2,
                            Latitude = 51.114836m,
                            Longitude = 17.068532m,
                            Name = "Grunwaldzka 71/4"
                        },
                        new
                        {
                            AdressId = 3,
                            Latitude = 51.114899m,
                            Longitude = 17.001978m,
                            Name = "Legnicka 42/18"
                        },
                        new
                        {
                            AdressId = 4,
                            Latitude = 51.123066m,
                            Longitude = 17.049608m,
                            Name = "Nowowiejska 31/10"
                        },
                        new
                        {
                            AdressId = 5,
                            Latitude = 51.098380m,
                            Longitude = 16.936670m,
                            Name = "Rakietowa 20/9"
                        },
                        new
                        {
                            AdressId = 6,
                            Latitude = 51.065627m,
                            Longitude = 16.957833m,
                            Name = "Targowa 87/11"
                        },
                        new
                        {
                            AdressId = 7,
                            Latitude = 51.119083m,
                            Longitude = 16.978771m,
                            Name = "Bystrzycka 64/3"
                        },
                        new
                        {
                            AdressId = 8,
                            Latitude = 51.124014m,
                            Longitude = 16.960451m,
                            Name = "Bajana 82/16"
                        },
                        new
                        {
                            AdressId = 9,
                            Latitude = 51.069190m,
                            Longitude = 17.040798m,
                            Name = "Terenowa 8/2"
                        },
                        new
                        {
                            AdressId = 10,
                            Latitude = 51.135035m,
                            Longitude = 16.973569m,
                            Name = "Kolista 32/5"
                        },
                        new
                        {
                            AdressId = 11,
                            Latitude = 51.091435m,
                            Longitude = 17.008427m,
                            Name = "Pretficza 27/19"
                        },
                        new
                        {
                            AdressId = 12,
                            Latitude = 51.1259106m,
                            Longitude = 16.9693086m,
                            Name = "Drzewieckiego 24/29"
                        },
                        new
                        {
                            AdressId = 13,
                            Latitude = 51.078977m,
                            Longitude = 17.066367m,
                            Name = "Gazowa 50/11"
                        },
                        new
                        {
                            AdressId = 14,
                            Latitude = 51.106747m,
                            Longitude = 17.086136m,
                            Name = "Edwarda Dembowskiego 13/4"
                        },
                        new
                        {
                            AdressId = 15,
                            Latitude = 51.158208m,
                            Longitude = 17.032974m,
                            Name = "Lekarska 44/12"
                        },
                        new
                        {
                            AdressId = 16,
                            Latitude = 51.080764m,
                            Longitude = 16.997120m,
                            Name = "Raclawicka 61/3"
                        },
                        new
                        {
                            AdressId = 17,
                            Latitude = 51.057948m,
                            Longitude = 17.058763m,
                            Name = "Brzozowa 10a"
                        });
                });

            modelBuilder.Entity("CourierApplication.Model.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdressId")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.HasIndex("AdressId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            AdressId = 1
                        },
                        new
                        {
                            ClientId = 2,
                            AdressId = 2
                        },
                        new
                        {
                            ClientId = 3,
                            AdressId = 3
                        },
                        new
                        {
                            ClientId = 4,
                            AdressId = 4
                        },
                        new
                        {
                            ClientId = 5,
                            AdressId = 5
                        },
                        new
                        {
                            ClientId = 6,
                            AdressId = 6
                        },
                        new
                        {
                            ClientId = 7,
                            AdressId = 7
                        },
                        new
                        {
                            ClientId = 8,
                            AdressId = 8
                        },
                        new
                        {
                            ClientId = 9,
                            AdressId = 9
                        },
                        new
                        {
                            ClientId = 10,
                            AdressId = 10
                        },
                        new
                        {
                            ClientId = 11,
                            AdressId = 11
                        },
                        new
                        {
                            ClientId = 12,
                            AdressId = 12
                        },
                        new
                        {
                            ClientId = 13,
                            AdressId = 13
                        },
                        new
                        {
                            ClientId = 14,
                            AdressId = 14
                        },
                        new
                        {
                            ClientId = 15,
                            AdressId = 15
                        },
                        new
                        {
                            ClientId = 16,
                            AdressId = 16
                        },
                        new
                        {
                            ClientId = 17,
                            AdressId = 17
                        });
                });

            modelBuilder.Entity("CourierApplication.Model.Courier", b =>
                {
                    b.Property<int>("CourierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isFree")
                        .HasColumnType("bit");

                    b.HasKey("CourierId");

                    b.ToTable("Couriers");

                    b.HasData(
                        new
                        {
                            CourierId = 1,
                            FirstName = "Marcin",
                            LastName = "Kowalski",
                            isFree = true
                        },
                        new
                        {
                            CourierId = 2,
                            FirstName = "Tomasz",
                            LastName = "Nowak",
                            isFree = true
                        },
                        new
                        {
                            CourierId = 3,
                            FirstName = "Tomasz",
                            LastName = "Gajda",
                            isFree = false
                        });
                });

            modelBuilder.Entity("CourierApplication.Model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdressId")
                        .HasColumnType("int");

                    b.Property<bool>("isCompleted")
                        .HasColumnType("bit");

                    b.HasKey("OrderId");

                    b.HasIndex("AdressId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            AdressId = 2,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 2,
                            AdressId = 10,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 3,
                            AdressId = 5,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 4,
                            AdressId = 8,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 5,
                            AdressId = 14,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 6,
                            AdressId = 10,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 7,
                            AdressId = 4,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 8,
                            AdressId = 15,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 9,
                            AdressId = 11,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 10,
                            AdressId = 7,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 11,
                            AdressId = 12,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 12,
                            AdressId = 6,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 13,
                            AdressId = 3,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 14,
                            AdressId = 17,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 15,
                            AdressId = 13,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 16,
                            AdressId = 9,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 17,
                            AdressId = 16,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 18,
                            AdressId = 4,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 19,
                            AdressId = 11,
                            isCompleted = false
                        },
                        new
                        {
                            OrderId = 20,
                            AdressId = 8,
                            isCompleted = false
                        });
                });

            modelBuilder.Entity("CourierApplication.Model.Client", b =>
                {
                    b.HasOne("CourierApplication.Model.Adress", "Adress")
                        .WithMany("Client")
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourierApplication.Model.Order", b =>
                {
                    b.HasOne("CourierApplication.Model.Adress", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
